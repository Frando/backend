From 2573930ed7ab63010c4c31294663c669881be321 Mon Sep 17 00:00:00 2001
From: Sebastian Reimers <info@miete-admin.de>
Date: Sat, 21 Nov 2015 13:04:56 +0100
Subject: [PATCH] studio link custom config

---
 src/conf.c   |  9 ++++++---
 src/config.c | 50 ++++++++++++++++++++++++++++----------------------
 2 files changed, 34 insertions(+), 25 deletions(-)

diff --git a/src/conf.c b/src/conf.c
index bc29ba7..7f415e9 100644
--- a/src/conf.c
+++ b/src/conf.c
@@ -167,10 +167,13 @@ int conf_path_get(char *path, size_t sz)
 	err = fs_gethome(buf, sizeof(buf));
 	if (err)
 		return err;
-
-	if (re_snprintf(path, sz, "%s" DIR_SEP ".baresip", buf) < 0)
+#ifdef SLPLUGIN
+	if (re_snprintf(path, sz, "%s" DIR_SEP ".studio-link-plugin", buf) < 0)
 		return ENOMEM;
-
+#else
+	if (re_snprintf(path, sz, "%s" DIR_SEP ".studio-link", buf) < 0)
+		return ENOMEM;
+#endif
 	return 0;
 }
 
diff --git a/src/config.c b/src/config.c
index 242ce9f..761b0b5 100644
--- a/src/config.c
+++ b/src/config.c
@@ -312,10 +312,12 @@ int config_print(struct re_printf *pf, const struct config *cfg)
 
 static const char *default_audio_device(void)
 {
-#if defined (ANDROID)
+#if defined (SLPLUGIN)
+	return "effect";
+#elif defined (ANDROID)
 	return "opensles";
 #elif defined (DARWIN)
-	return "coreaudio,nil";
+	return "audiounit,nil";
 #elif defined (FREEBSD)
 	return "oss,/dev/dsp";
 #elif defined (OPENBSD)
@@ -387,7 +389,7 @@ static int core_config_template(struct re_printf *pf, const struct config *cfg)
 				"\n"
 			  "\n# SIP\n"
 			  "sip_trans_bsize\t\t128\n"
-			  "#sip_listen\t\t0.0.0.0:5060\n"
+			  "sip_listen\t\t0.0.0.0:0\n"
 			  "#sip_certificate\tcert.pem\n"
 			  "\n# Audio\n"
 			  "audio_player\t\t%s\n"
@@ -395,10 +397,10 @@ static int core_config_template(struct re_printf *pf, const struct config *cfg)
 			  "audio_alert\t\t%s\n"
 			  "audio_srate\t\t%u-%u\n"
 			  "audio_channels\t\t%u-%u\n"
-			  "#ausrc_srate\t\t48000\n"
-			  "#auplay_srate\t\t48000\n"
-			  "#ausrc_channels\t\t0\n"
-			  "#auplay_channels\t\t0\n"
+			  "ausrc_srate\t\t48000\n"
+			  "auplay_srate\t\t48000\n"
+			  "ausrc_channels\t\t2\n"
+			  "auplay_channels\t\t2\n"
 			  ,
 			  poll_method_name(poll_method_best()),
 			  default_audio_device(),
@@ -428,12 +430,11 @@ static int core_config_template(struct re_printf *pf, const struct config *cfg)
 			  "#rtp_bandwidth\t\t512-1024 # [kbit/s]\n"
 			  "rtcp_enable\t\tyes\n"
 			  "rtcp_mux\t\tno\n"
-			  "jitter_buffer_delay\t%u-%u\t\t# frames\n"
+			  "jitter_buffer_delay\t1-5\t\t# frames\n"
 			  "rtp_stats\t\tno\n"
 			  "\n# Network\n"
 			  "#dns_server\t\t10.0.0.1:53\n"
 			  "#net_interface\t\t%H\n",
-			  cfg->avt.jbuf_del.min, cfg->avt.jbuf_del.max,
 			  default_interface_print, NULL);
 
 #ifdef USE_VIDEO
@@ -556,7 +557,7 @@ int config_write_template(const char *file, const struct config *cfg)
 	(void)re_fprintf(f, "#module\t\t\t" MOD_PRE "httpd" MOD_EXT "\n");
 
 	(void)re_fprintf(f, "\n# Audio codec Modules (in order)\n");
-	(void)re_fprintf(f, "#module\t\t\t" MOD_PRE "opus" MOD_EXT "\n");
+	(void)re_fprintf(f, "module\t\t\t" MOD_PRE "opus" MOD_EXT "\n");
 	(void)re_fprintf(f, "#module\t\t\t" MOD_PRE "silk" MOD_EXT "\n");
 	(void)re_fprintf(f, "#module\t\t\t" MOD_PRE "amr" MOD_EXT "\n");
 	(void)re_fprintf(f, "#module\t\t\t" MOD_PRE "g7221" MOD_EXT "\n");
@@ -569,18 +570,21 @@ int config_write_template(const char *file, const struct config *cfg)
 	(void)re_fprintf(f, "#module\t\t\t" MOD_PRE "bv32" MOD_EXT "\n");
 
 	(void)re_fprintf(f, "\n# Audio filter Modules (in encoding order)\n");
-	(void)re_fprintf(f, "module\t\t\t" MOD_PRE "vumeter" MOD_EXT "\n");
+	(void)re_fprintf(f, "#module\t\t\t" MOD_PRE "vumeter" MOD_EXT "\n");
 	(void)re_fprintf(f, "#module\t\t\t" MOD_PRE "sndfile" MOD_EXT "\n");
 	(void)re_fprintf(f, "#module\t\t\t" MOD_PRE "speex_aec" MOD_EXT "\n");
 	(void)re_fprintf(f, "#module\t\t\t" MOD_PRE "speex_pp" MOD_EXT "\n");
 	(void)re_fprintf(f, "#module\t\t\t" MOD_PRE "plc" MOD_EXT "\n");
 
 	(void)re_fprintf(f, "\n# Audio driver Modules\n");
-#if defined (ANDROID)
+#if defined (SLPLUGIN)
+	(void)re_fprintf(f, "module\t\t\t" MOD_PRE "effect" MOD_EXT "\n");
+#elif defined (__SYMBIAN32__)
+	(void)re_fprintf(f, "module\t\t\t" MOD_PRE "mda" MOD_EXT "\n");
+#elif defined (ANDROID)
 	(void)re_fprintf(f, "module\t\t\t" MOD_PRE "opensles" MOD_EXT "\n");
 #elif defined (DARWIN)
-	(void)re_fprintf(f, "module\t\t\t" MOD_PRE "coreaudio" MOD_EXT "\n");
-	(void)re_fprintf(f, "#module\t\t\t" MOD_PRE "audiounit" MOD_EXT "\n");
+	(void)re_fprintf(f, "module\t\t\t" MOD_PRE "audiounit" MOD_EXT "\n");
 #elif defined (FREEBSD)
 	(void)re_fprintf(f, "module\t\t\t" MOD_PRE "oss" MOD_EXT "\n");
 #elif defined (OPENBSD)
@@ -655,15 +659,16 @@ int config_write_template(const char *file, const struct config *cfg)
 	(void)re_fprintf(f, "# Temporary Modules (loaded then unloaded)\n");
 	(void)re_fprintf(f, "\n");
 	(void)re_fprintf(f, "module_tmp\t\t" MOD_PRE "uuid" MOD_EXT "\n");
-	(void)re_fprintf(f, "module_tmp\t\t" MOD_PRE "account" MOD_EXT "\n");
+	(void)re_fprintf(f, "#module_tmp\t\t" MOD_PRE "account" MOD_EXT "\n");
 	(void)re_fprintf(f, "\n");
 
 	(void)re_fprintf(f, "\n#------------------------------------"
 			 "------------------------------------------\n");
 	(void)re_fprintf(f, "# Application Modules\n");
 	(void)re_fprintf(f, "\n");
+	(void)re_fprintf(f, "module_app\t\t" MOD_PRE "webapp"MOD_EXT"\n");
 	(void)re_fprintf(f, "module_app\t\t" MOD_PRE "auloop"MOD_EXT"\n");
-	(void)re_fprintf(f, "module_app\t\t"  MOD_PRE "contact"MOD_EXT"\n");
+	(void)re_fprintf(f, "#module_app\t\t"  MOD_PRE "contact"MOD_EXT"\n");
 	(void)re_fprintf(f, "module_app\t\t"  MOD_PRE "menu"MOD_EXT"\n");
 	(void)re_fprintf(f, "#module_app\t\t"  MOD_PRE "mwi"MOD_EXT"\n");
 	(void)re_fprintf(f, "#module_app\t\t" MOD_PRE "natbd"MOD_EXT"\n");
@@ -678,13 +683,12 @@ int config_write_template(const char *file, const struct config *cfg)
 			 "------------------------------------------\n");
 	(void)re_fprintf(f, "# Module parameters\n");
 	(void)re_fprintf(f, "\n");
-
+#if 0
 	(void)re_fprintf(f, "\n");
 	(void)re_fprintf(f, "cons_listen\t\t0.0.0.0:5555\n");
 
 	(void)re_fprintf(f, "\n");
 	(void)re_fprintf(f, "http_listen\t\t0.0.0.0:8000\n");
-
 	(void)re_fprintf(f, "\n");
 	(void)re_fprintf(f, "evdev_device\t\t/dev/input/event0\n");
 
@@ -699,11 +703,13 @@ int config_write_template(const char *file, const struct config *cfg)
 	(void)re_fprintf(f, "speex_agc_level\t\t8000\n");
 
 	(void)re_fprintf(f, "\n# Opus codec parameters\n");
-	(void)re_fprintf(f, "opus_bitrate\t\t28000 # 6000-510000\n");
-
+	(void)re_fprintf(f, "opus_bitrate\t\t64000 # 6000-510000\n");
 	(void)re_fprintf(f, "\n# NAT Behavior Discovery\n");
 	(void)re_fprintf(f, "natbd_server\t\tcreytiv.com\n");
 	(void)re_fprintf(f, "natbd_interval\t\t600\t\t# in seconds\n");
+#endif
+	(void)re_fprintf(f, "\n# Opus codec parameters\n");
+	(void)re_fprintf(f, "opus_bitrate\t\t64000 # 6000-510000\n");
 
 	(void)re_fprintf(f,
 			"\n# Selfview\n"
@@ -712,8 +718,8 @@ int config_write_template(const char *file, const struct config *cfg)
 
 	(void)re_fprintf(f,
 			"\n# ICE\n"
-			"ice_turn\t\tno\n"
-			"ice_debug\t\tno\n"
+			"ice_turn\t\tyes\n"
+			"ice_debug\t\tyes\n"
 			"ice_nomination\t\tregular\t# {regular,aggressive}\n"
 			"ice_mode\t\tfull\t# {full,lite}\n");
 
